{"ast":null,"code":"import * as shape from 'd3-shape';\nimport { icons } from '../shared/icons';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../services/meteo.service\";\nimport * as i2 from \"../services/note.service\";\nimport * as i3 from \"@angular/router\";\nimport * as i4 from \"@angular/common\";\nimport * as i5 from \"@angular/flex-layout/flex\";\nimport * as i6 from \"@fortawesome/angular-fontawesome\";\nimport * as i7 from \"@swimlane/ngx-charts\";\nimport * as i8 from \"../directives/swipe.directive\";\n\nfunction DayDetailsComponent_div_0_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 6)(1, \"div\", 7);\n    i0.ɵɵelement(2, \"fa-icon\", 8);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(3, \"div\", 9);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"date\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const hour_r3 = ctx.$implicit;\n    const ctx_r1 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"icon\", ctx_r1.icons[hour_r3.weather[0].icon]);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind2(5, 2, (hour_r3.dt + ctx_r1.meteo.city.timezone + ctx_r1.offset) * 1000, \"HH:mm\"), \" \");\n  }\n}\n\nfunction DayDetailsComponent_div_0_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 10);\n    i0.ɵɵelement(1, \"ngx-charts-line-chart\", 11);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext(2);\n    i0.ɵɵclassProp(\"chart-dark\", ctx_r2.dark);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"scheme\", ctx_r2.colorScheme)(\"view\", ctx_r2.view)(\"legend\", ctx_r2.legend)(\"showGridLines\", ctx_r2.showGridLines)(\"showXAxisLabel\", ctx_r2.showXAxisLabel)(\"showYAxisLabel\", ctx_r2.showYAxisLabel)(\"curve\", ctx_r2.lineInterpolation)(\"xAxis\", ctx_r2.xAxis)(\"yAxis\", ctx_r2.yAxis)(\"xAxisLabel\", ctx_r2.xAxisLabel)(\"yAxisLabel\", ctx_r2.yAxisLabel)(\"timeline\", ctx_r2.timeline)(\"results\", ctx_r2.chart);\n  }\n}\n\nfunction DayDetailsComponent_div_0_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 1)(1, \"div\", 2)(2, \"div\", 3);\n    i0.ɵɵtemplate(3, DayDetailsComponent_div_0_div_3_Template, 6, 5, \"div\", 4);\n    i0.ɵɵelementEnd();\n    i0.ɵɵtemplate(4, DayDetailsComponent_div_0_div_4_Template, 2, 15, \"div\", 5);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"ngForOf\", ctx_r0.today);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.today);\n  }\n}\n\nexport let DayDetailsComponent = /*#__PURE__*/(() => {\n  class DayDetailsComponent {\n    constructor(meteoService, noteService, router) {\n      this.meteoService = meteoService;\n      this.noteService = noteService;\n      this.router = router;\n      this.curveBasis = shape.curveBasis;\n      this.offset = new Date().getTimezoneOffset();\n      this.icons = icons;\n      this.view = [0, 300];\n      this.legend = false;\n      this.showLabels = true;\n      this.showGridLines = false;\n      this.animations = true;\n      this.lineInterpolation = this.curveBasis;\n      this.xAxis = true;\n      this.yAxis = true;\n      this.showYAxisLabel = false;\n      this.showXAxisLabel = false;\n      this.xAxisLabel = 'Hour';\n      this.yAxisLabel = 'Temperature';\n      this.timeline = false;\n      this.colorScheme = 'vivid';\n    }\n\n    ngOnInit() {\n      this.meteoService.actualdate.subscribe(date => {\n        this.date = date.getTime();\n        this.offset = date.getTimezoneOffset() * 60;\n      });\n      this.meteoService.selectedMeteo.subscribe(sel => {\n        this.meteo = sel;\n        this.today = sel.list.filter(date => new Date((date.dt + this.offset + sel.city.timezone) * 1000).getDay() === new Date(this.date + (this.offset + sel.city.timezone) * 1000).getDay() || new Date((date.dt + this.offset + sel.city.timezone) * 1000).getDay() === (1 + new Date(this.date + (this.offset + sel.city.timezone) * 1000).getDay() + 7) % 7 && new Date((date.dt + this.offset + sel.city.timezone) * 1000).getHours() < 9);\n      });\n      this.chartSubscription = this.meteoService.actualChart.subscribe(chart => {\n        this.chart = chart;\n\n        if (chart && chart[0].series.length > 0) {\n          this.view[0] = chart[0].series.length * 94;\n        }\n      });\n    }\n\n    ngOndestroy() {\n      this.chartSubscription.unsubscribe();\n    }\n\n    goUp() {\n      this.router.navigate(['home']);\n    }\n\n    getDark() {\n      this.noteService.data.subscribe(dark => this.dark = dark);\n    }\n\n  }\n\n  DayDetailsComponent.ɵfac = function DayDetailsComponent_Factory(t) {\n    return new (t || DayDetailsComponent)(i0.ɵɵdirectiveInject(i1.MeteoService), i0.ɵɵdirectiveInject(i2.NoteService), i0.ɵɵdirectiveInject(i3.Router));\n  };\n\n  DayDetailsComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: DayDetailsComponent,\n    selectors: [[\"app-day-details\"]],\n    decls: 1,\n    vars: 1,\n    consts: [[\"class\", \"day\", \"fxFlex\", \"100\", \"fxLayout\", \"row wrap\", \"fxLayoutAlign\", \"center\", \"appSwipe\", \"\", 4, \"ngIf\"], [\"fxFlex\", \"100\", \"fxLayout\", \"row wrap\", \"fxLayoutAlign\", \"center\", \"appSwipe\", \"\", 1, \"day\"], [\"fxFlex\", \"row wrap\", \"fxFlex.gt-sm\", \"50\", \"fxFlex\", \"100\", 1, \"nexthours\", \"rz\"], [\"fxLayout\", \"col\"], [\"class\", \"hour r\", \"fxLayout\", \"row wrap\", 4, \"ngFor\", \"ngForOf\"], [\"class\", \"chart r\", 3, \"chart-dark\", 4, \"ngIf\"], [\"fxLayout\", \"row wrap\", 1, \"hour\", \"r\"], [\"fxFlex\", \"100\", 1, \"icon\", \"b\"], [3, \"icon\"], [\"fxFlex\", \"100\", 1, \"time\"], [1, \"chart\", \"r\"], [3, \"scheme\", \"view\", \"legend\", \"showGridLines\", \"showXAxisLabel\", \"showYAxisLabel\", \"curve\", \"xAxis\", \"yAxis\", \"xAxisLabel\", \"yAxisLabel\", \"timeline\", \"results\"]],\n    template: function DayDetailsComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵtemplate(0, DayDetailsComponent_div_0_Template, 5, 2, \"div\", 0);\n      }\n\n      if (rf & 2) {\n        i0.ɵɵproperty(\"ngIf\", ctx.today);\n      }\n    },\n    dependencies: [i4.NgForOf, i4.NgIf, i5.DefaultLayoutDirective, i5.DefaultLayoutAlignDirective, i5.DefaultFlexDirective, i6.FaIconComponent, i7.LineChartComponent, i8.SwipeDirective, i4.DatePipe],\n    styles: [\".chart[_ngcontent-%COMP%]{display:inline-block;width:100%;flex:100%;margin-left:0;transition:all .5s;fill:#fff}.chart-dark[_ngcontent-%COMP%]{fill:#fff}\"]\n  });\n  return DayDetailsComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}