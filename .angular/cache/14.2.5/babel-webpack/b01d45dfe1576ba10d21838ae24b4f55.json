{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.CanonicalCodeForDisplayNames = void 0;\n\nvar ecma402_abstract_1 = require(\"@formatjs/ecma402-abstract\");\n\nvar UNICODE_REGION_SUBTAG_REGEX = /^([a-z]{2}|[0-9]{3})$/i;\nvar ALPHA_4 = /^[a-z]{4}$/i;\n\nfunction isUnicodeRegionSubtag(region) {\n  return UNICODE_REGION_SUBTAG_REGEX.test(region);\n}\n\nfunction isUnicodeScriptSubtag(script) {\n  return ALPHA_4.test(script);\n}\n\nfunction CanonicalCodeForDisplayNames(type, code) {\n  if (type === 'language') {\n    return (0, ecma402_abstract_1.CanonicalizeLocaleList)([code])[0];\n  }\n\n  if (type === 'region') {\n    if (!isUnicodeRegionSubtag(code)) {\n      throw RangeError('invalid region');\n    }\n\n    return code.toUpperCase();\n  }\n\n  if (type === 'script') {\n    if (!isUnicodeScriptSubtag(code)) {\n      throw RangeError('invalid script');\n    }\n\n    return \"\".concat(code[0].toUpperCase()).concat(code.slice(1).toLowerCase());\n  }\n\n  (0, ecma402_abstract_1.invariant)(type === 'currency', 'invalid type');\n\n  if (!(0, ecma402_abstract_1.IsWellFormedCurrencyCode)(code)) {\n    throw RangeError('invalid currency');\n  }\n\n  return code.toUpperCase();\n}\n\nexports.CanonicalCodeForDisplayNames = CanonicalCodeForDisplayNames;","map":null,"metadata":{},"sourceType":"script"}