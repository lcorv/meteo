{"ast":null,"code":"import { ElementRef, Renderer2 } from '@angular/core';\nimport * as i0 from \"@angular/core\";\nexport let NavbarHidingDirective = /*#__PURE__*/(() => {\n  class NavbarHidingDirective {\n    constructor(el, renderer) {\n      this.el = el;\n      this.renderer = renderer;\n      this.oldScroll = 0;\n    }\n\n    onWindowScroll() {\n      let scrollY = window.scrollY;\n      let newScroll = this.oldScroll - scrollY;\n      let newPos = this.el.nativeElement.offsetTop + newScroll;\n\n      if (newPos < -50) {\n        newPos = -50;\n      }\n\n      ;\n\n      if (newPos > 0) {\n        newPos = 0;\n      }\n\n      ;\n      this.el.nativeElement.style.top = newPos + \"px\";\n      this.oldScroll = scrollY;\n    }\n\n  }\n\n  NavbarHidingDirective.ɵfac = function NavbarHidingDirective_Factory(t) {\n    return new (t || NavbarHidingDirective)(i0.ɵɵdirectiveInject(i0.ElementRef), i0.ɵɵdirectiveInject(i0.Renderer2));\n  };\n\n  NavbarHidingDirective.ɵdir = /*@__PURE__*/i0.ɵɵdefineDirective({\n    type: NavbarHidingDirective,\n    selectors: [[\"\", \"appNavbarHiding\", \"\"]],\n    hostBindings: function NavbarHidingDirective_HostBindings(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵlistener(\"scroll\", function NavbarHidingDirective_scroll_HostBindingHandler() {\n          return ctx.onWindowScroll();\n        }, false, i0.ɵɵresolveWindow);\n      }\n    }\n  });\n  return NavbarHidingDirective;\n})();","map":null,"metadata":{},"sourceType":"module"}