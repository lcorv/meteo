{"ast":null,"code":"\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.shouldPolyfill = exports._shouldPolyfillWithoutLocale = void 0;\n\nvar intl_localematcher_1 = require(\"@formatjs/intl-localematcher\");\n\nvar supported_locales_generated_1 = require(\"./supported-locales.generated\");\n/**\n * https://bugs.chromium.org/p/chromium/issues/detail?id=1097432\n */\n\n\nfunction hasMissingICUBug() {\n  var DisplayNames = Intl.DisplayNames;\n\n  if (DisplayNames && !DisplayNames.polyfilled) {\n    return new DisplayNames(['en'], {\n      type: 'region'\n    }).of('CA') === 'CA';\n  }\n\n  return false;\n}\n/**\n * https://bugs.chromium.org/p/chromium/issues/detail?id=1176979\n */\n\n\nfunction hasScriptBug() {\n  var DisplayNames = Intl.DisplayNames;\n\n  if (DisplayNames && !DisplayNames.polyfilled) {\n    return new DisplayNames(['en'], {\n      type: 'script'\n    }).of('arab') !== 'Arabic';\n  }\n\n  return false;\n}\n\nfunction supportedLocalesOf(locale) {\n  if (!locale) {\n    return true;\n  }\n\n  var locales = Array.isArray(locale) ? locale : [locale];\n  return Intl.DisplayNames.supportedLocalesOf(locales).length === locales.length;\n}\n\nfunction _shouldPolyfillWithoutLocale() {\n  return !Intl.DisplayNames || hasMissingICUBug() || hasScriptBug();\n}\n\nexports._shouldPolyfillWithoutLocale = _shouldPolyfillWithoutLocale;\n\nfunction shouldPolyfill(locale) {\n  if (locale === void 0) {\n    locale = 'en';\n  }\n\n  try {\n    if (_shouldPolyfillWithoutLocale() || !supportedLocalesOf(locale)) {\n      return (0, intl_localematcher_1.match)([locale], supported_locales_generated_1.supportedLocales, 'en');\n    }\n  } catch (e) {\n    return true;\n  }\n}\n\nexports.shouldPolyfill = shouldPolyfill;","map":null,"metadata":{},"sourceType":"script"}