{"ast":null,"code":"import { Observable, BehaviorSubject } from 'rxjs';\nimport { catchError } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nimport * as i2 from \"./process-http-msg.service\";\nexport let MeteoService = /*#__PURE__*/(() => {\n  class MeteoService {\n    constructor(http, processHttpMsgService) {\n      this.http = http;\n      this.processHttpMsgService = processHttpMsgService;\n      this.apiKey = '868bf5c0468b60f81fd7434185cdd7af';\n      this.drawer = new BehaviorSubject('');\n      this.drawerstate = this.drawer.asObservable();\n      this.city = new BehaviorSubject('');\n      this.actualcity = this.city.asObservable();\n      this.farenheit = new BehaviorSubject(false);\n      this.actualUnit = this.farenheit.asObservable();\n      this.meteo = new BehaviorSubject([]);\n      this.displayedMeteo = new BehaviorSubject('');\n      this.selectedMeteo = this.meteo.asObservable();\n      this.nowDisplayed = this.displayedMeteo.asObservable();\n      this.error = new BehaviorSubject([]);\n      this.actualError = this.error.asObservable();\n      this.date = new BehaviorSubject(new Date());\n      this.actualdate = this.date.asObservable();\n      this.chart = new BehaviorSubject('');\n      this.actualChart = this.chart.asObservable();\n    }\n\n    putCity(city) {\n      this.city.next(city);\n    }\n\n    putDisplayedMeteo(displayed) {\n      this.displayedMeteo.next(displayed);\n    }\n\n    putDrawer(drawer) {\n      this.drawer.next(drawer);\n    }\n\n    putDate(date) {\n      this.date.next(date);\n    }\n\n    putUnit(unit) {\n      this.farenheit.next(unit);\n    }\n\n    putMeteo(meteo, error) {\n      this.meteo.next(meteo);\n      this.error.next(error);\n    }\n\n    putChart(chart) {\n      this.chart.next(chart); //console.log(JSON.stringify(chart))\n    }\n\n    getMeteo(city) {\n      let url = 'https://api.openweathermap.org/data/2.5/forecast?q=' + city + '&appid=' + this.apiKey + '&units=metric&lang=EN';\n      return this.http.get(url).pipe(catchError(this.processHttpMsgService.handleError));\n    }\n\n    getSelectedMeteo() {\n      return this.selectedMeteo;\n    }\n\n    getCity() {\n      return this.actualcity;\n    }\n\n    getInitialCity(lat, lon) {\n      let url = \"https://api.openweathermap.org/data/2.5/forecast?lat=\" + lat + \"&lon=\" + lon + \"&appid=\" + this.apiKey + \"&units=metric&lang=IT\";\n      return this.http.get(url).pipe(catchError(this.processHttpMsgService.handleError));\n    }\n\n  }\n\n  MeteoService.ɵfac = function MeteoService_Factory(t) {\n    return new (t || MeteoService)(i0.ɵɵinject(i1.HttpClient), i0.ɵɵinject(i2.ProcessHttpMsgService));\n  };\n\n  MeteoService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: MeteoService,\n    factory: MeteoService.ɵfac\n  });\n  return MeteoService;\n})();","map":null,"metadata":{},"sourceType":"module"}